[phases.setup]
cmds = [
    "apt-get update && apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev libonig-dev libxml2-dev libzip-dev",
    "docker-php-ext-configure gd --with-freetype --with-jpeg || true",
    "docker-php-ext-install -j$(nproc) gd mbstring pdo pdo_mysql xml zip || php -m"
]

[phases.install]
cmds = ["composer install --no-dev --optimize-autoloader"]

[phases.build]
cmds = [
    # Crée le fichier .env à partir des variables Railway
    "echo \"APP_NAME=\\\"${APP_NAME}\\\"\" > .env",
    "echo \"APP_ENV=\\\"${APP_ENV}\\\"\" >> .env",
    "echo \"APP_KEY=\\\"${APP_KEY}\\\"\" >> .env",
    "echo \"APP_DEBUG=\\\"${APP_DEBUG}\\\"\" >> .env",
    "echo \"APP_URL=\\\"${APP_URL}\\\"\" >> .env",
    "echo \"DB_CONNECTION=\\\"${DB_CONNECTION}\\\"\" >> .env",
    "echo \"DB_HOST=\\\"${DB_HOST}\\\"\" >> .env",
    "echo \"DB_PORT=\\\"${DB_PORT}\\\"\" >> .env",
    "echo \"DB_DATABASE=\\\"${DB_DATABASE}\\\"\" >> .env",
    "echo \"DB_USERNAME=\\\"${DB_USERNAME}\\\"\" >> .env",
    "echo \"DB_PASSWORD=\\\"${DB_PASSWORD}\\\"\" >> .env",
    "echo \"MAIL_MAILER=\\\"${MAIL_MAILER}\\\"\" >> .env",
    "echo \"MAIL_HOST=\\\"${MAIL_HOST}\\\"\" >> .env",
    "echo \"MAIL_PORT=\\\"${MAIL_PORT}\\\"\" >> .env",
    "echo \"MAIL_USERNAME=\\\"${MAIL_USERNAME}\\\"\" >> .env",
    "echo \"MAIL_PASSWORD=\\\"${MAIL_PASSWORD}\\\"\" >> .env",
    "echo \"MAIL_ENCRYPTION=\\\"${MAIL_ENCRYPTION}\\\"\" >> .env",
    "echo \"MAIL_FROM_ADDRESS=\\\"${MAIL_FROM_ADDRESS}\\\"\" >> .env",
    "echo \"MAIL_FROM_NAME=\\\"${MAIL_FROM_NAME}\\\"\" >> .env",
    # Génère la clé seulement si elle n'existe pas
    "if [ -z \\\"${APP_KEY}\\\" ]; then php artisan key:generate --force; fi",
    "php artisan storage:link",
    "php artisan optimize:clear"
]

[start]
cmd = "php artisan serve --host=0.0.0.0 --port=$PORT"
